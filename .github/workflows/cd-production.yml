name: CD Production

on:
  pull_request_target:
    branches:
      - production
    types:
      - closed

jobs:
  standard-version:
    if: github.event.pull_request.merged == true
    name: Run standard-version
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_TOKEN }}

      # Set up the Node.js environment
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Initialization
        id: init
        run: |
          git config --global user.email "${{ secrets.USEWR_EMAIL }}"
          git config --global user.name "Taco Chang"

      - name: Update Version
        run: |
          npx standard-version --skip.tag
          git push origin HEAD:main HEAD:production -f

  release-tag:
    needs: standard-version
    if: github.event.pull_request.merged == true
    name: Release Tag
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_TOKEN }}

      # Set up the Node.js environment
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Set Nx Environment Variables
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: 'setSHAs'
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: production

      - name: Initialization
        id: init
        run: |
          git config --global user.email "${{ secrets.USEWR_EMAIL }}"
          git config --global user.name "Taco Chang"
          git pull
          npm ci

      - name: Get Package Version
        id: version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Release Tag
        run: |
          git tag \
            -f \
            -a "v${{ steps.version.outputs.current-version }}" \
            -m "$( \
              npx nx print-affected \
                --select=projects \
                --target=build \
                --base=${{ steps.setSHAs.outputs.base }} \
                --head=${{ steps.setSHAs.outputs.head }} \
            )"

          git push --tags origin HEAD:production

      - name: Trigger Affected Actions(Libs)
        run: |
          IFS=', ' read -r -a affecteds <<< "$( \
            npx nx print-affected \
              --select=projects \
              --target=build \
              --type=lib \
              --base=${{ steps.setSHAs.outputs.base }} \
              --head=${{ steps.setSHAs.outputs.head }} \
          )"

          for lib in "${affecteds[@]}"; do
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/taco3064/appcraft-mono/actions/workflows/npm-$lib.yml/dispatches \
              -d "{ \
                \"ref\": \"production\", \
                \"inputs\": { \
                  \"base\": \"${{ steps.setSHAs.outputs.base }}\", \
                  \"head\": \"${{ steps.setSHAs.outputs.head }}\", \
                  \"version\": \"${{ steps.version.outputs.current-version }}\" \
                } \
              }"
          done

      - name: Trigger Affected Actions(Apps)
        run: |
          npx nx build types
          npx nx build widgets

          IFS=', ' read -r -a affecteds <<< "$( \
            npx nx print-affected \
              --select=projects \
              --target=build \
              --type=app \
              --base=${{ steps.setSHAs.outputs.base }} \
              --head=${{ steps.setSHAs.outputs.head }} \
          )"

          for app in "${affecteds[@]}"; do
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/taco3064/appcraft-mono/actions/workflows/gke-$app.yml/dispatches \
              -d "{ \
                \"ref\": \"production\", \
                \"inputs\": { \
                  \"base\": \"${{ steps.setSHAs.outputs.base }}\", \
                  \"head\": \"${{ steps.setSHAs.outputs.head }}\", \
                  \"version\": \"${{ steps.version.outputs.current-version }}\" \
                } \
              }"
          done
